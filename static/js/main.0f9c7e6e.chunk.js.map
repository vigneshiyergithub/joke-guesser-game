{"version":3,"sources":["components/common.js","components/JokeDisplayer.js","components/JokeTypeDisplayer.js","components/Game.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","props","height","marginTop","border","marginHorizontal","paddingLeft","paddingRight","textAlign","Block","flexDirection","justifyContent","marginBottom","Col","JokeContainer","EmptyBlock","Input","input","JokeDisplayer","useState","firstPartJoke","setFirstPartJoke","secondPartJoke","setSecondPartJoke","useEffect","fetch","jokeType","then","data","json","setup","delivery","joke","onSave","FirstPartJoke","JokeGuesser","text","setText","score","setScore","showSection","setShowSection","stringSimilarity","compareTwoStrings","buttonClick","e","style","JokeTextContent","Consumer","value","onChange","target","type","onClick","disabled","JokeTypeDisplayer","setJokeType","React","createContext","Game","counter","setCounter","display","setDisplay","jokeText","setJokeText","incrementCounter","setTimeout","average","nums","length","reduce","a","b","noHeight","Provider","levelScore","arr","Navbar","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"ikCAEO,IAAMA,EAAYC,IAAOC,IAAV,KAIP,SAAAC,GAAK,OAAIA,EAAMC,OAASD,EAAMC,OAAS,aACpC,SAAAD,GAAK,OAAIA,EAAME,UAAYF,EAAME,UAAY,aAChD,SAAAF,GAAK,OAAIA,EAAMG,OAAS,YAAc,UAClC,SAAAH,GAAK,OAAIA,EAAMI,iBAAmB,MAAQ,OACzC,SAAAJ,GAAK,OAAIA,EAAMI,iBAAmB,MAAQ,OAC1C,SAAAJ,GAAK,8BAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOK,mBAAX,QAA0B,OAC9B,SAAAL,GAAK,8BAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOM,oBAAX,QAA2B,OACnC,SAAAN,GAAK,8BAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOO,iBAAX,QAAwB,YAIlCC,EAAQV,IAAOC,IAAV,KAEI,SAAAC,GAAK,8BAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOS,qBAAX,QAA4B,YAChC,SAAAT,GAAK,OAAIA,EAAMU,eAAiBV,EAAMU,eAAiB,YAC/D,SAAAV,GAAK,OAAIA,EAAMC,OAASD,EAAMC,OAAS,iBACpC,SAAAD,GAAK,OAAIA,EAAME,UAAYF,EAAME,UAAY,aAC1C,SAAAF,GAAK,OAAIA,EAAMW,aAAeX,EAAMW,aAAe,aACpD,SAAAX,GAAK,8BAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOK,mBAAX,QAA0B,OAC9B,SAAAL,GAAK,8BAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOM,oBAAX,QAA2B,OAIxCM,EAAMd,IAAOC,IAAV,K,+VCxBhB,IAAMc,EAAgBf,IAAOC,IAAV,KAIF,SAACC,GAAD,OAAYA,EAAMI,iBAAmB,MAAQ,OAC5C,SAACJ,GAAD,OAAYA,EAAMI,iBAAmB,MAAQ,OAGzDU,EAAahB,IAAOC,IAAV,KAIVgB,EAAQjB,IAAOkB,MAAV,KAGEC,EAAgB,SAACjB,GAAW,IAAD,EACIkB,mBAAS,IADb,mBAC/BC,EAD+B,KAChBC,EADgB,OAEMF,mBAAS,IAFf,mBAE/BG,EAF+B,KAEfC,EAFe,KAetC,OAXAC,qBAAU,WACRC,MAPY,qCAOC,UAAMxB,EAAMyB,SAAZ,kBACVC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,YAA0B,IAAvBG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACVD,GAASC,IACXV,EAAiBS,GACjBP,EAAkBQ,SAGvB,IAGD,kBAAC,EAAD,CAAe1B,kBAAkB,GAC/B,kBAAC,EAAD,CAAe2B,KAAMZ,IACrB,kBAACL,EAAD,MACA,kBAAC,EAAD,CAAaiB,KAAMV,EAAgBW,OAAQhC,EAAMgC,WAKjDC,EAAgB,SAACjC,GACrB,OAAO,0CAAgBA,EAAM+B,OAGzBG,EAAc,SAAClC,GAAW,IAAD,EACLkB,mBAAS,IADJ,mBACtBiB,EADsB,KAChBC,EADgB,OAEHlB,mBAAS,MAFN,mBAEtBmB,EAFsB,KAEfC,EAFe,OAGSpB,oBAAS,GAHlB,mBAGtBqB,EAHsB,KAGTC,EAHS,KAI7BjB,qBAAU,WACRe,EAASG,IAAiBC,kBAAkBP,EAAMnC,EAAM+B,SACvD,CAACI,EAAMnC,EAAM+B,OAEhB,IAAMY,EAAc,SAACC,GACnBJ,GAAe,GACfxC,EAAMgC,OAAOK,IAGTQ,EAAQ,GAId,OACE,kBAACC,EAAgBC,SAAjB,MACG,SAAEC,GAAF,OACC,kBAACnD,EAAD,KACE,kBAACW,EAAD,CACEE,eAAgB,gBAChBT,OAAQ,QAKR,kBAACc,EAAD,CACEiC,MAAOb,EACPU,MAAOA,EACPI,SAAU,SAACL,GACTR,EAAQQ,EAAEM,OAAOF,OACjBA,EAAMJ,EAAEM,OAAOF,QAEjBG,KAAK,SAEP,4BAAQC,QAAST,EAAaU,SAAUd,GAAxC,UAEDA,GACC,kBAAC1C,EAAD,CAAWI,OAAQ,OAAQC,UAAU,OAAOK,UAAU,QACpD,kBAACC,EAAD,gBAAgB6B,GAChB,kBAAC7B,EAAD,wBAAwBR,EAAM+B,YCvF/BuB,EAAoB,SAACtD,GAM9B,OAAO,kBAACQ,EAAD,CAAOJ,kBAAgB,EAACC,YAAa,MAAOC,aAAc,OACzD,4BAAQ0C,MAAOhD,EAAMyB,SAAUwB,SALlB,SAACL,GAClB5C,EAAMuD,YAAYX,EAAEM,OAAOF,QAIgCK,WAAYrD,EAAMyB,UACrE,iDACA,4BAAQuB,MAAM,OAAd,OACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,UCXHF,EAAkBU,IAAMC,gBAExBC,EAAO,SAAC1D,GAAW,IAAD,EACCkB,mBAAS,GADV,mBACtByC,EADsB,KACbC,EADa,OAEC1C,oBAAS,GAFV,mBAEtB2C,EAFsB,KAEbC,EAFa,OAGH5C,mBAAS,IAHN,mBAGtBmB,EAHsB,KAGfC,EAHe,OAIGpB,mBAAS,IAJZ,mBAItB6C,EAJsB,KAIZC,EAJY,KAKvBC,EAAmB,WACvBL,EAAWD,EAAU,GACrBG,GAAW,GACXI,YAAW,WACTJ,GAAW,KACV,MAaCK,EAAU,SAACC,GACf,OAAOA,EAAKC,OAAS,EAAID,EAAKE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAKJ,EAAKC,OAAS,GAGxE,OACE,kBAACxE,EAAD,KACE,kBAACW,EAAD,CAAOP,OAAQ,SACf,kBAACW,EAAD,KACE,kBAACJ,EAAD,CAAOP,OAAQ,QAAf,aACY,6BADZ,IACoB0D,EADpB,IAhCgB,IAmChB,kBAACnD,EAAD,CAAOP,OAAQ,QAAf,eAAmC,6BAAnC,IAA0CkE,EAAQ9B,KAEpD,kBAACxC,EAAD,CACEI,OAAQ,OACRC,UAAW,OACXC,QAAM,EACNC,kBAAgB,EAChBqE,UAAQ,GAEK,IAAZd,GACC,kBAACnD,EAAD,CAAON,UAAW,OAAQG,YAAa,MAAOC,aAAc,OAC1D,4BAAQ8C,QAASa,GAAjB,eAGS,IAAZN,GAAiBA,EAjDF,IAkDd,kBAAC,WAAD,KACGE,GACC,kBAACf,EAAgB4B,SAAjB,CAA0B1B,MAAOgB,GAC/B,kBAAC,EAAD,CAAehC,OAlCd,SAAC2C,GACd,IAAMC,EAAG,sBAAOvC,GAAP,CAAcsC,IACvBrC,EAASsC,OAmCD,kBAACpE,EAAD,CACEG,aAAc,OACdN,YAAa,MACbC,aAAc,OAEd,4BAAQ+C,UAAWU,EAAUX,QAASa,GAAtC,UA7DU,KAmEfN,GACC,kBAAC9D,EAAD,CACEI,OAAO,OACPC,UAAU,OACVG,YAAY,MACZC,aAAa,MACbC,UAAU,QAEV,kBAACC,EAAD,sBAAsB2D,EAAQ9B,IAC9B,kBAAC7B,EAAD,KACE,4BAAQ4C,QA/DD,WACjBQ,EAAW,GACXtB,EAAS,MA6DC,iBASRzB,EAAgB,SAACb,GAAW,IAAD,EACCkB,mBAAS,MADV,mBACxBO,EADwB,KACd8B,EADc,KAE/B,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAmB9B,SAAUA,EAAU8B,YAAaA,IACnD9B,GAAY,kBAAC,EAAD,CAAeA,SAAUA,EAAUO,OAAQhC,EAAMgC,W,+MC9FpE,IAAMxB,EAAQV,IAAOC,IAAV,KASI,SAAS8E,EAAO7E,GAC7B,OAAO,kBAAC,EAAD,0BCEM8E,MAVf,WACE,OACE,yBAAKC,UAAU,OACb,kBAACF,EAAD,MACA,kBAAC,EAAD,QCGcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0f9c7e6e.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    display : flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height : ${props => props.height ? props.height : 'inherit'};\r\n    margin-top: ${props => props.marginTop ? props.marginTop : 'inherit'};\r\n    border : ${props => props.border ? \"1px solid\" : \"none\"};\r\n    margin-left: ${props => props.marginHorizontal ? \"10%\" : \"0\"};\r\n    margin-right: ${props => props.marginHorizontal ? \"10%\" : \"0\"};\r\n    padding-left: ${props => props?.paddingLeft ?? \"0\"};\r\n    padding-right: ${props => props?.paddingRight ?? \"0\"};\r\n    text-align: ${props => props?.textAlign ?? \"center\"};\r\n\r\n`\r\n\r\nexport const Block = styled.div`\r\n    display : flex;\r\n    flex-direction: ${props => props?.flexDirection ?? \"column\"};\r\n    justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'};\r\n    height : ${props => props.height ? props.height : 'fit-content'};\r\n    margin-top: ${props => props.marginTop ? props.marginTop : 'inherit'};\r\n    margin-bottom: ${props => props.marginBottom ? props.marginBottom : 'inherit'};\r\n    padding-left: ${props => props?.paddingLeft ?? \"0\"};\r\n    padding-right: ${props => props?.paddingRight ?? \"0\"};\r\n\r\n`\r\n\r\nexport const Col = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    padding-left: 20%;\r\n    padding-right: 20%;\r\n`","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport stringSimilarity from \"string-similarity\";\r\nimport { Container, Block } from \"./common\";\r\nimport {JokeTextContent} from './Game'\r\nconst JokeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-left: ${(props) => (props.marginHorizontal ? \"30%\" : \"0\")};\r\n  margin-right: ${(props) => (props.marginHorizontal ? \"30%\" : \"0\")};\r\n`;\r\n\r\nconst EmptyBlock = styled.div`\r\n  height: 5rem;\r\n`;\r\n\r\nconst Input = styled.input``;\r\nconst jokeURL = \"https://sv443.net/jokeapi/v2/joke/\";\r\n\r\nexport const JokeDisplayer = (props) => {\r\n  const [firstPartJoke, setFirstPartJoke] = useState(\"\");\r\n  const [secondPartJoke, setSecondPartJoke] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(jokeURL + `${props.jokeType}?type=twopart`)\r\n      .then((data) => data.json())\r\n      .then(({ setup, delivery }) => {\r\n        if (setup && delivery) {\r\n          setFirstPartJoke(setup);\r\n          setSecondPartJoke(delivery);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <JokeContainer marginHorizontal={true}>\r\n      <FirstPartJoke joke={firstPartJoke} />\r\n      <EmptyBlock />\r\n      <JokeGuesser joke={secondPartJoke} onSave={props.onSave} />\r\n    </JokeContainer>\r\n  );\r\n};\r\n\r\nconst FirstPartJoke = (props) => {\r\n  return <div>Premise : {props.joke}</div>;\r\n};\r\n\r\nconst JokeGuesser = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [score, setScore] = useState(null);\r\n  const [showSection, setShowSection] = useState(false);\r\n  useEffect(() => {\r\n    setScore(stringSimilarity.compareTwoStrings(text, props.joke));\r\n  }, [text, props.joke]);\r\n\r\n  const buttonClick = (e) => {\r\n    setShowSection(true);\r\n    props.onSave(score);\r\n  };\r\n\r\n  const style = {\r\n    // width: \"20rem\",\r\n    // marginRight: \"2rem\",\r\n  };\r\n  return (\r\n    <JokeTextContent.Consumer>\r\n      {( value ) => (\r\n        <Container>\r\n          <Block\r\n            justifyContent={\"space-between\"}\r\n            height={'5rem'}\r\n            // paddingLeft=\"2rem\"\r\n            // paddingRight=\"2rem\"\r\n            // flexDirection=\"column\"\r\n          >\r\n            <Input\r\n              value={text}\r\n              style={style}\r\n              onChange={(e) => {\r\n                setText(e.target.value);\r\n                value(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n            />\r\n            <button onClick={buttonClick} disabled={showSection}>Check</button>\r\n          </Block>\r\n          {showSection && (\r\n            <Container height={'5rem'} marginTop=\"1rem\" textAlign=\"left\"> \r\n              <Block>Score : {score}</Block>\r\n              <Block>Actual Answer : {props.joke}</Block>\r\n            </Container>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </JokeTextContent.Consumer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Container, Block } from './common'\r\n\r\nexport const JokeTypeDisplayer = (props) => {\r\n    \r\n    const handleChange = (e) => {\r\n        props.setJokeType(e.target.value)\r\n    }\r\n\r\n    return <Block marginHorizontal paddingLeft={'30%'} paddingRight={'30%'}>\r\n            <select value={props.jokeType} onChange={handleChange} disabled={!!props.jokeType} >\r\n                <option>Please Select</option>\r\n                <option value=\"Any\">Any</option>\r\n                <option value=\"Programming\">Programming</option>\r\n                <option value=\"Miscellaneous\">Miscellaneous</option>\r\n                <option value=\"Dark\">Dark</option>\r\n                <option value=\"Pun\">Pun</option>\r\n            </select>\r\n        </Block>\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { JokeDisplayer } from \"./JokeDisplayer\";\r\nimport { JokeTypeDisplayer } from \"./JokeTypeDisplayer\";\r\nimport { Block, Container, Col } from \"./common\";\r\n\r\nexport const JokeTextContent = React.createContext();\r\nconst GAME_PAGE_LIMIT = 10;\r\nexport const Game = (props) => {\r\n  const [counter, setCounter] = useState(0);\r\n  const [display, setDisplay] = useState(false);\r\n  const [score, setScore] = useState([]);\r\n  const [jokeText, setJokeText] = useState(\"\");\r\n  const incrementCounter = () => {\r\n    setCounter(counter + 1);\r\n    setDisplay(false);\r\n    setTimeout(() => {\r\n      setDisplay(true);\r\n    }, 1000);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setCounter(0);\r\n    setScore([]);\r\n  };\r\n\r\n  const onSave = (levelScore) => {\r\n    const arr = [...score, levelScore];\r\n    setScore(arr);\r\n  };\r\n\r\n  const average = (nums) => {\r\n    return nums.length > 0 ? nums.reduce((a, b) => a + b) / nums.length : 0;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Block height={\"5rem\"} />\r\n      <Col>\r\n        <Block height={\"1rem\"}>\r\n          Game Page <br /> {counter}/{GAME_PAGE_LIMIT}\r\n        </Block>\r\n        <Block height={\"1rem\"}>Total Score <br/> {average(score)}</Block>\r\n      </Col>\r\n      <Container\r\n        height={\"70vh\"}\r\n        marginTop={\"2rem\"}\r\n        border\r\n        marginHorizontal\r\n        noHeight\r\n      >\r\n        {counter === 0 && (\r\n          <Block marginTop={\"2rem\"} paddingLeft={\"30%\"} paddingRight={\"30%\"}>\r\n            <button onClick={incrementCounter}>Start Game</button>\r\n          </Block>\r\n        )}\r\n        {counter !== 0 && counter < GAME_PAGE_LIMIT && (\r\n          <Fragment>\r\n            {display && (\r\n              <JokeTextContent.Provider value={setJokeText}>\r\n                <JokeContainer onSave={onSave} />\r\n              </JokeTextContent.Provider>\r\n            )}\r\n            <Block\r\n              marginBottom={\"2rem\"}\r\n              paddingLeft={\"30%\"}\r\n              paddingRight={\"30%\"}\r\n            >\r\n              <button disabled={!jokeText} onClick={incrementCounter}>\r\n                Next\r\n              </button>\r\n            </Block>\r\n          </Fragment>\r\n        )}\r\n        {counter === GAME_PAGE_LIMIT && (\r\n          <Container\r\n            height=\"5rem\"\r\n            marginTop=\"2rem\"\r\n            paddingLeft=\"30%\"\r\n            paddingRight=\"30%\"\r\n            textAlign=\"left\"\r\n          >\r\n            <Block>Total Score - {average(score)}</Block>\r\n            <Block>\r\n              <button onClick={resetState}>New Game</button>\r\n            </Block>\r\n          </Container>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst JokeContainer = (props) => {\r\n  const [jokeType, setJokeType] = useState(null);\r\n  return (\r\n    <Fragment>\r\n      <JokeTypeDisplayer jokeType={jokeType} setJokeType={setJokeType} />\r\n      {jokeType && <JokeDisplayer jokeType={jokeType} onSave={props.onSave} />}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Block = styled.div`\r\n  background-color: black;\r\n  color: white;\r\n  text-align: left;\r\n  padding-left: 3rem;\r\n  padding-top: 2rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nexport default function Navbar(props) {\r\n  return <Block>Joke Guesser Game</Block>;\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Game } from './components/Game';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Game />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}